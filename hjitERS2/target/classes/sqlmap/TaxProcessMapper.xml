<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 맵핑될 DAO 인터페이스의 Full name 을 줍니다. -->
<mapper namespace="kr.co.hjitERS.service.dao.TaxProcessDAO">

	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 loginVO 는 mybatis-confg.xml 에 Alias 되어 있습니다. -->
	<select id="getListByShipperMain" resultType="taxProcessVO" parameterType="String">
		SELECT 
			a.serial, a.jun_no, a.issue_date, a.take_user, a.cu_code
			, a.tax_snum, a.proc_type, a.ship_amt, a.ship_vat, a.ship_tot
			, d.cu_sangho, d.cu_adcode,
			CASE
				WHEN c.transyn = 'Y' THEN '완료'
				WHEN c.transyn = 'N' THEN '전송중'
				WHEN c.transyn = 'E' THEN '에러'
				ELSE '전송중'
			END AS report_stat
			, c.transyn
		FROM s_shipper_main a
			LEFT OUTER JOIN a_sb_vat b
				ON a.gubun = b.sbvt_gubun
				AND a.jun_no = b.sbvt_code
			LEFT OUTER JOIN bill_trans c
				ON b.resseq = c.billseq
			LEFT JOIN c_cust d
				ON a.gubun = d.cu_gubun and a.cu_code = d.cu_code
		WHERE a.gubun = '01'
			AND substr(a.issue_date, 1, 8) between #{symd} and #{eymd}
			AND a.proc_type = '0'
			AND d.cu_code = #{cu_code_shr}
		ORDER BY a.serial, a.issue_date 
	</select>
	
	
	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 loginVO 는 mybatis-confg.xml 에 Alias 되어 있습니다. -->
	<select id="getSerialMain" resultType="serialMainVO" parameterType="String">
		SELECT 
			a.serial, a.jun_no, a.issue_date, a.take_user, a.cu_code 
			, a.tax_snum , a.proc_type, a.ship_amt, a.ship_vat, a.ship_tot, a.issue_date
			, b.cu_sangho, b.cu_adcode, b.cu_master, b.cu_juso, b.cu_uptae 
			, b.cu_upjong, b.cma_account, c.ship_blno, c.ship_holddesc, c.ship_vessel, c.ship_mrn 
			, c.ship_invoiceno, c.ship_arrive, h.tran_dd, h.tran_hh, h.incom_amount, h.vir_acctno, h.rndclrnm
		FROM
			s_shipper_main a 
		LEFT JOIN c_cust b 
			ON a.gubun = b.cu_gubun and a.cu_code = b.cu_code 
		LEFT JOIN ( 
			SELECT
				sub.gubun, sub.serial, sub.ship_blno, sub.ship_vessel 
				, sub.ship_mrn, sub.ship_invoiceno, sub.ship_arrive, sub.ship_holddesc
				, (row_number() over (partition by sub.gubun, sub.serial order by sub.tran_seq desc)) as row_num 
			FROM
				s_shipper_sub sub 
		) c 
		ON a.gubun = c.gubun AND a.serial = c.serial
		LEFT JOIN hist_virt_acct_trori h
    	ON a.serial = h.serial
		WHERE a.gubun = '01' AND a.serial = #{serial} AND c.row_num = '1'
	</select>
	
	
	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 loginVO 는 mybatis-confg.xml 에 Alias 되어 있습니다. -->
	<select id="getSerialSub" resultType="serialSubVO" parameterType="String">
		SELECT 
			gubun,serial,tran_seq,ship_contno,ship_point
			,ship_hold,ship_seq,ship_blno,ship_refno,ship_refno2
			,ship_personal,ship_holddesc,ship_vessel,ship_voyage,ship_operator
			,ship_type,ship_count,ship_unit,ship_qty,ship_rate,ship_total
			,ship_amount,ship_vat_amt,ship_driver_name,ship_driver_hp,ship_truckno
			,DECODE(ship_basedate, ' ', '-', ship_basedate) AS ship_basedate,ship_limitdate,ship_taxdate,ship_mrn,ship_invoiceno
			,ship_vesselname,ship_arrive,inuser,indate,sale_class
		FROM
			s_shipper_sub
		WHERE gubun = '01'                                                                                             
			AND serial = #{serial}
		ORDER BY tran_seq
	</select>
	
	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 loginVO 는 mybatis-confg.xml 에 Alias 되어 있습니다. -->
	<select id="getSerialTax" resultType="serialTaxVO" parameterType="String">
		SELECT b.cu_sangho, b.cu_adcode, b.cu_master, b.cu_juso 
             , b.cu_uptae, b.cu_upjong, b.cma_account  
             , c.sbvt_date , c.sbvt_gongamt, c.sbvt_vat 
             , d.* 
       FROM s_shipper_main a 
		LEFT JOIN c_cust b 
			ON a.gubun = b.cu_gubun and a.cu_code = b.cu_code 
		LEFT JOIN a_sb_vat c 
        	ON a.gubun = c.sbvt_gubun and a.jun_no = c.sbvt_code
		INNER JOIN a_calin d 
          ON a.gubun = d.gubun and c.sbvt_code = d.junpyo and c.sbvt_gno = d.gno 
      	WHERE a.gubun = '01'                                                                                             
	        AND a.serial = #{serial} 
	</select>
		
	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 loginVO 는 mybatis-confg.xml 에 Alias 되어 있습니다. -->
	<select id="getCompanyInfo" resultType="companyVO" parameterType="String">
		SELECT 
			co_gubun, co_gbname, co_proc, co_saname, co_setdate,
			co_sano, co_bubin, co_master, co_upjong, co_inwon,
			co_uptae, co_t_ddd, co_t_kkk, co_t_lll, co_f_ddd,
			co_f_kkk, co_f_lll, co_post, co_juso,co_engjuso,
			co_jusic, co_juamt, co_balsu1, co_balsu2, co_sdate,
			co_edate, co_ldate, co_jabon, co_gigan, co_yumu,
			co_gubyu, co_inuser, co_indate, co_toijik, co_esaname,
			co_emaster, co_url, co_magam, co_gita, co_gbubin,
			co_gkind, co_gsojae, co_managetax, co_manageoffice, co_masterno			
		FROM c_company
		WHERE co_gubun = '01'
	</select>
	
	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 loginVO 는 mybatis-confg.xml 에 Alias 되어 있습니다. -->	
	<select id="loginCustInfo" resultType="custVO" parameterType="String">
		SELECT 
			cu_gubun, cu_code, cu_sangho, cu_master, cu_adcode  
		  , cu_sano, cu_publiccode, cu_post, cu_juso, cu_uptae  
		  , cu_upjong, cu_t_ddd, cu_f_ddd, cu_takeuser, cu_takeusermail, cma_account 
        FROM C_CUST A                              
        WHERE A.CU_GUBUN = '01'                       
        	AND A.CU_ADCODE = #{cu_adcode}            
	</select>
</mapper>
